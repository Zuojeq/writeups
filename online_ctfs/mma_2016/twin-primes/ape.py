#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Author: john
# @Date:   2016-09-02 21:04:46
# @Last Modified by:   john
# @Last Modified time: 2016-09-04 16:48:03


import primefac
# from treys_functions import *

key1n = 19402643768027967294480695361037227649637514561280461352708420192197328993512710852087871986349184383442031544945263966477446685587168025154775060178782897097993949800845903218890975275725416699258462920097986424936088541112790958875211336188249107280753661467619511079649070248659536282267267928669265252935184448638997877593781930103866416949585686541509642494048554242004100863315220430074997145531929128200885758274037875349539018669336263469803277281048657198114844413236754680549874472753528866434686048799833381542018876362229842605213500869709361657000044182573308825550237999139442040422107931857506897810951
key1e = 65537
p1 = 109839168287920364771652233739542245893972429420400471787477887103169099491804762856071669374751286279860451783039232642710981517010937585802203565874477414469934412741906018847402147404957765188018616912003220542453809516059524224015255036266232001320821428611494617812180060212800300789614856560253120304701
q1 = 176645945799298135110721766377313792982812334295271987596634864064777954683139799946630491521527848390622912482826980130051166690303653228530141163053890146954290070312482492552495214917023922382112893625586133272913759418717134953590760109002220865007673751773346439753002517112721944238066505389966935631251

key2n = 19402643768027967294480695361037227649637514561280461352708420192197328993512710852087871986349184383442031544945263966477446685587168025154775060178782897097993949800845903218890975275725416699258462920097986424936088541112790958875211336188249107280753661467619511079649070248659536282267267928669265252935757418867172314593546678104100129027339256068940987412816779744339994971665109555680401467324487397541852486805770300895063315083965445098467966738905392320963293379345531703349669197397492241574949069875012089172754014231783160960425531160246267389657034543342990940680603153790486530477470655757947009682859
key2e = 65537
p2 = 109839168287920364771652233739542245893972429420400471787477887103169099491804762856071669374751286279860451783039232642710981517010937585802203565874477414469934412741906018847402147404957765188018616912003220542453809516059524224015255036266232001320821428611494617812180060212800300789614856560253120304703
q2 = 176645945799298135110721766377313792982812334295271987596634864064777954683139799946630491521527848390622912482826980130051166690303653228530141163053890146954290070312482492552495214917023922382112893625586133272913759418717134953590760109002220865007673751773346439753002517112721944238066505389966935631253


# def newton_sqrt(val):
def intsqrt(val):
    def f(x):
        return x**2-val
    def derf(x):
        return 2*x
    guess =val
    for i in range(1, 21):
        guess = guess-f(guess)/derf(guess)
        #print guess
    return guess

print key1n * key2n

# trying = key1n
# print "N:", trying
# candidate1 = intsqrt(trying)
# candidate2 = candidate1 + 2
# candidate3 = candidate1 - 2

# number = candidate1 * candidate2
# print number == trying
# number = candidate1 * candidate3
# print number == trying

# trying = key2n
# print "N:", trying
# candidate1 = intsqrt(trying)
# print "SQRT:", candidate1
# candidate2 = candidate1 + 2
# candidate3 = candidate1 - 2

# number = candidate1 * candidate2
# print number == trying
# number = candidate1 * candidate3
# print number == trying

# ''' 
# use newtons method to take the square root of N
# intsqrt from treys library
# take the square root of n

# get the number as a candidate
# take the candidate +2 which is another candidate
# take the candidate -2 which is another candidate

# take the middle one and multiply it by the upper or lower and get N
# '''

# print primefac.factorint(key1n)